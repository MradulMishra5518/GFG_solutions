class Solution {
  public:
    int longestSubarray(vector<int>& arr, int k) {
        // code here
        unordered_map<int, int> prefixSum;
        int sum = 0;
        int ansLength = 0;
        
        for (int i = 0; i < arr.size(); i++) {
            sum += arr[i];
            
           
            if (sum == k) {
                
                ansLength = max(ansLength, i + 1);//1
            }
            
          
            if (prefixSum.find(sum - k) != prefixSum.end()) {
                
                ansLength = max(ansLength, i - prefixSum[sum - k]);
            }
            
            
            if (prefixSum.find(sum) == prefixSum.end()) {
                prefixSum[sum] = i;
            }
        }
        
        return ansLength;
    }
};
